[tool.poetry]
authors = ["Arnaldo Turque <contato@turque.com.br>"]
description = ""
name = "app"
version = "0.1.0"

[tool.poetry.dependencies]
email-validator = "^2.1.0.post1"
emails = "^0.6"
fastapi = "^0.109.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
pydantic = ">2.0"
python = "^3.10"
python-multipart = "^0.0.18"
tenacity = "^8.2.3"
uvicorn = {extras = ["standard"], version = "^0.24.0.post1"}

alembic = "^1.12.1"
gunicorn = "^22.0.0"
httpx = "^0.25.1"
jinja2 = "^3.1.4"
psycopg = {extras = ["binary"], version = "^3.1.13"}
sqlmodel = "^0.0.19"
# Pin bcrypt until passlib supports the latest
bcrypt = "4.0.1"
fastapi-cli = "^0.0.5"
pydantic-settings = "^2.2.1"
pyjwt = "^2.8.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.8.0"}
faker = "^28.1.0"

[tool.poetry.group.dev.dependencies]
coverage = "^7.4.3"
mypy = "^1.8.0"
pre-commit = "^3.6.2"
pytest = "^7.4.3"
ruff = "^0.2.2"
types-passlib = "^1.7.7.20240106"

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]

[tool.mypy]
exclude = ["venv", ".venv", "alembic"]
strict = true

[tool.ruff]
exclude = ["alembic"]
target-version = "py310"

[tool.ruff.lint]
ignore = [
  "E501", # line too long, handled by black
  "B008", # do not perform function calls in argument defaults
  "W191", # indentation contains tabs
  "B904", # Allow raising exceptions without from e, for HTTPException
]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
  "ARG001", # unused arguments in functions
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
